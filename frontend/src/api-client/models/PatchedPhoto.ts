/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoryEnum } from './CategoryEnum';
import {
    CategoryEnumFromJSON,
    CategoryEnumFromJSONTyped,
    CategoryEnumToJSON,
} from './CategoryEnum';

/**
 * 
 * @export
 * @interface PatchedPhoto
 */
export interface PatchedPhoto {
    /**
     * 
     * @type {number}
     * @memberof PatchedPhoto
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedPhoto
     */
    readonly name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedPhoto
     */
    readonly image?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedPhoto
     */
    readonly pubDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedPhoto
     */
    readonly shotDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedPhoto
     */
    readonly trip?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedPhoto
     */
    readonly activity?: number | null;
    /**
     * 
     * @type {CategoryEnum}
     * @memberof PatchedPhoto
     */
    readonly category?: CategoryEnum;
}

/**
 * Check if a given object implements the PatchedPhoto interface.
 */
export function instanceOfPatchedPhoto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedPhotoFromJSON(json: any): PatchedPhoto {
    return PatchedPhotoFromJSONTyped(json, false);
}

export function PatchedPhotoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedPhoto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'pubDate': !exists(json, 'pub_date') ? undefined : (json['pub_date'] === null ? null : new Date(json['pub_date'])),
        'shotDate': !exists(json, 'shot_date') ? undefined : (json['shot_date'] === null ? null : new Date(json['shot_date'])),
        'trip': !exists(json, 'trip') ? undefined : json['trip'],
        'activity': !exists(json, 'activity') ? undefined : json['activity'],
        'category': !exists(json, 'category') ? undefined : CategoryEnumFromJSON(json['category']),
    };
}

export function PatchedPhotoToJSON(value?: PatchedPhoto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

