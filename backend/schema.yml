openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/activities/:
    get:
      operationId: activities_list
      tags:
      - activities
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
    post:
      operationId: activities_create
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/{id}/:
    get:
      operationId: activities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activities
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    put:
      operationId: activities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    patch:
      operationId: activities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    delete:
      operationId: activities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activities
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/locations/:
    get:
      operationId: locations_list
      tags:
      - locations
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
    post:
      operationId: locations_create
      tags:
      - locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /api/locations/{id}/:
    get:
      operationId: locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location.
        required: true
      tags:
      - locations
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    put:
      operationId: locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location.
        required: true
      tags:
      - locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    patch:
      operationId: locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location.
        required: true
      tags:
      - locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    delete:
      operationId: locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location.
        required: true
      tags:
      - locations
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/photos/:
    get:
      operationId: photos_list
      tags:
      - photos
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Photo'
          description: ''
    post:
      operationId: photos_create
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Photo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
  /api/photos/{id}/:
    get:
      operationId: photos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    put:
      operationId: photos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Photo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    patch:
      operationId: photos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    delete:
      operationId: photos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/trips/:
    get:
      operationId: trips_list
      tags:
      - trips
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
          description: ''
    post:
      operationId: trips_create
      tags:
      - trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trip'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
  /api/trips/{id}/:
    get:
      operationId: trips_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - trips
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
    put:
      operationId: trips_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Trip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Trip'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
    patch:
      operationId: trips_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - trips
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrip'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
          description: ''
    delete:
      operationId: trips_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip.
        required: true
      tags:
      - trips
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        activity_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date of activity
        location:
          type: integer
          readOnly: true
      required:
      - activity_date
      - id
      - location
      - name
    CategoryEnum:
      enum:
      - NA
      - CI
      - PE
      type: string
      description: |-
        * `NA` - Nature
        * `CI` - City
        * `PE` - People
    Location:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        continent:
          type: string
          readOnly: true
          nullable: true
        country:
          type: string
          readOnly: true
          nullable: true
        state:
          type: string
          readOnly: true
          nullable: true
        city:
          type: string
          readOnly: true
          nullable: true
      required:
      - city
      - continent
      - country
      - id
      - state
    PatchedActivity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        activity_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date of activity
        location:
          type: integer
          readOnly: true
    PatchedLocation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        continent:
          type: string
          readOnly: true
          nullable: true
        country:
          type: string
          readOnly: true
          nullable: true
        state:
          type: string
          readOnly: true
          nullable: true
        city:
          type: string
          readOnly: true
          nullable: true
    PatchedPhoto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        image:
          type: string
          format: uri
          readOnly: true
        pub_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date published
        shot_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date shot
        trip:
          type: integer
          readOnly: true
          nullable: true
        activity:
          type: integer
          readOnly: true
          nullable: true
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryEnum'
          readOnly: true
    PatchedTrip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        trip_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date of trip
        location:
          type: integer
          readOnly: true
    Photo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        image:
          type: string
          format: uri
          readOnly: true
        pub_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date published
        shot_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date shot
        trip:
          type: integer
          readOnly: true
          nullable: true
        activity:
          type: integer
          readOnly: true
          nullable: true
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryEnum'
          readOnly: true
      required:
      - activity
      - category
      - id
      - image
      - name
      - pub_date
      - shot_date
      - trip
    Trip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        trip_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Date of trip
        location:
          type: integer
          readOnly: true
      required:
      - id
      - location
      - name
      - trip_date
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
